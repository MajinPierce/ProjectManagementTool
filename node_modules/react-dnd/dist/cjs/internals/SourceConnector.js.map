{"version":3,"sources":["../../../src/internals/SourceConnector.ts"],"sourcesContent":["import type { ReactElement, Ref, RefObject } from 'react'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\nimport type { Backend, Unsubscribe, Identifier } from 'dnd-core'\nimport { isRef } from './isRef.js'\nimport type { DragSourceOptions, DragPreviewOptions } from '../types/index.js'\nimport { shallowEqual } from '@react-dnd/shallowequal'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n"],"names":["SourceConnector","receiveHandlerId","newHandlerId","handlerId","reconnect","connectTarget","dragSource","dragSourceOptions","dragSourceOptionsInternal","options","dragPreviewOptions","dragPreviewOptionsInternal","didChange","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedDragSource","lastConnectedHandlerId","lastConnectedDragSourceOptions","dragSourceUnsubscribe","backend","connectDragSource","forceDidChange","dragPreview","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","shallowEqual","undefined","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","current","clearDragSource","clearDragPreview","hooks","wrapConnectorHooks","node","isRef"],"mappings":";;;;AACmC,GAAyB,CAAzB,qBAAyB;AAEtC,GAAY,CAAZ,QAAY;AAEL,GAAyB,CAAzB,aAAyB;MASzCA,eAAe;IAoDpBC,gBAAgB,CAACC,YAA+B,EAAQ,CAAC;QAC/D,EAAE,EAAE,IAAI,CAACC,SAAS,KAAKD,YAAY,EAAE,CAAC;YACrC,MAAM;QACP,CAAC;QAED,IAAI,CAACC,SAAS,GAAGD,YAAY;QAC7B,IAAI,CAACE,SAAS;IACf,CAAC;QAEUC,aAAa,GAAQ,CAAC;QAChC,MAAM,CAAC,IAAI,CAACC,UAAU;IACvB,CAAC;QAEUC,iBAAiB,GAA6B,CAAC;QACzD,MAAM,CAAC,IAAI,CAACC,yBAAyB;IACtC,CAAC;QACUD,iBAAiB,CAACE,OAAiC,EAAE,CAAC;QAChE,IAAI,CAACD,yBAAyB,GAAGC,OAAO;IACzC,CAAC;QAEUC,kBAAkB,GAA8B,CAAC;QAC3D,MAAM,CAAC,IAAI,CAACC,0BAA0B;IACvC,CAAC;QAEUD,kBAAkB,CAACD,OAAkC,EAAE,CAAC;QAClE,IAAI,CAACE,0BAA0B,GAAGF,OAAO;IAC1C,CAAC;IAEML,SAAS,GAAS,CAAC;QACzB,KAAK,CAACQ,SAAS,GAAG,IAAI,CAACC,mBAAmB;QAC1C,IAAI,CAACC,oBAAoB,CAACF,SAAS;IACpC,CAAC;IAEOC,mBAAmB,GAAY,CAAC;QACvC,KAAK,CAACP,UAAU,GAAG,IAAI,CAACA,UAAU;QAClC,EAAgD,AAAhD,8CAAgD;QAChD,KAAK,CAACM,SAAS,GACd,IAAI,CAACG,kBAAkB,MACvB,IAAI,CAACC,4BAA4B,MACjC,IAAI,CAACC,0BAA0B;QAEhC,EAAE,EAAEL,SAAS,EAAE,CAAC;YACf,IAAI,CAACM,oBAAoB;QAC1B,CAAC;QAED,EAAE,GAAG,IAAI,CAACf,SAAS,EAAE,CAAC;YACrB,MAAM,CAACS,SAAS;QACjB,CAAC;QACD,EAAE,GAAGN,UAAU,EAAE,CAAC;YACjB,IAAI,CAACa,uBAAuB,GAAGb,UAAU;YACzC,MAAM,CAACM,SAAS;QACjB,CAAC;QAED,EAAE,EAAEA,SAAS,EAAE,CAAC;YACf,IAAI,CAACQ,sBAAsB,GAAG,IAAI,CAACjB,SAAS;YAC5C,IAAI,CAACgB,uBAAuB,GAAGb,UAAU;YACzC,IAAI,CAACe,8BAA8B,GAAG,IAAI,CAACd,iBAAiB;YAC5D,IAAI,CAACe,qBAAqB,GAAG,IAAI,CAACC,OAAO,CAACC,iBAAiB,CAC1D,IAAI,CAACrB,SAAS,EACdG,UAAU,EACV,IAAI,CAACC,iBAAiB;QAExB,CAAC;QACD,MAAM,CAACK,SAAS;IACjB,CAAC;IAEOE,oBAAoB,CAACW,cAAc,GAAG,KAAK,EAAQ,CAAC;QAC3D,KAAK,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW;QACpC,EAAgD,AAAhD,8CAAgD;QAChD,KAAK,CAACd,SAAS,GACda,cAAc,IACd,IAAI,CAACV,kBAAkB,MACvB,IAAI,CAACY,6BAA6B,MAClC,IAAI,CAACC,2BAA2B;QAEjC,EAAE,EAAEhB,SAAS,EAAE,CAAC;YACf,IAAI,CAACiB,qBAAqB;QAC3B,CAAC;QAED,EAAE,GAAG,IAAI,CAAC1B,SAAS,EAAE,CAAC;YACrB,MAAM;QACP,CAAC;QACD,EAAE,GAAGuB,WAAW,EAAE,CAAC;YAClB,IAAI,CAACI,wBAAwB,GAAGJ,WAAW;YAC3C,MAAM;QACP,CAAC;QAED,EAAE,EAAEd,SAAS,EAAE,CAAC;YACf,IAAI,CAACQ,sBAAsB,GAAG,IAAI,CAACjB,SAAS;YAC5C,IAAI,CAAC2B,wBAAwB,GAAGJ,WAAW;YAC3C,IAAI,CAACK,+BAA+B,GAAG,IAAI,CAACrB,kBAAkB;YAC9D,IAAI,CAACsB,sBAAsB,GAAG,IAAI,CAACT,OAAO,CAACU,kBAAkB,CAC5D,IAAI,CAAC9B,SAAS,EACduB,WAAW,EACX,IAAI,CAAChB,kBAAkB;QAEzB,CAAC;IACF,CAAC;IAEOK,kBAAkB,GAAY,CAAC;QACtC,MAAM,CAAC,IAAI,CAACK,sBAAsB,KAAK,IAAI,CAACjB,SAAS;IACtD,CAAC;IAEOa,4BAA4B,GAAY,CAAC;QAChD,MAAM,CAAC,IAAI,CAACG,uBAAuB,KAAK,IAAI,CAACb,UAAU;IACxD,CAAC;IAEOqB,6BAA6B,GAAY,CAAC;QACjD,MAAM,CAAC,IAAI,CAACG,wBAAwB,KAAK,IAAI,CAACJ,WAAW;IAC1D,CAAC;IAEOT,0BAA0B,GAAY,CAAC;QAC9C,MAAM,MAAEiB,aAAY,eACnB,IAAI,CAACb,8BAA8B,EACnC,IAAI,CAACd,iBAAiB;IAExB,CAAC;IAEOqB,2BAA2B,GAAY,CAAC;QAC/C,MAAM,MAAEM,aAAY,eACnB,IAAI,CAACH,+BAA+B,EACpC,IAAI,CAACrB,kBAAkB;IAEzB,CAAC;IAEMQ,oBAAoB,GAAG,CAAC;QAC9B,EAAE,EAAE,IAAI,CAACI,qBAAqB,EAAE,CAAC;YAChC,IAAI,CAACA,qBAAqB;YAC1B,IAAI,CAACA,qBAAqB,GAAGa,SAAS;QACvC,CAAC;IACF,CAAC;IAEMN,qBAAqB,GAAG,CAAC;QAC/B,EAAE,EAAE,IAAI,CAACG,sBAAsB,EAAE,CAAC;YACjC,IAAI,CAACA,sBAAsB;YAC3B,IAAI,CAACA,sBAAsB,GAAGG,SAAS;YACvC,IAAI,CAACC,eAAe,GAAG,IAAI;YAC3B,IAAI,CAACC,cAAc,GAAG,IAAI;QAC3B,CAAC;IACF,CAAC;QAEW/B,UAAU,GAAG,CAAC;QACzB,MAAM,CACL,IAAI,CAACgC,cAAc,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,OAAO;IAE1E,CAAC;QAEWd,WAAW,GAAG,CAAC;QAC1B,MAAM,CACL,IAAI,CAACU,eAAe,IACnB,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAACG,OAAO;IAErD,CAAC;IAEOC,eAAe,GAAG,CAAC;QAC1B,IAAI,CAACH,cAAc,GAAG,IAAI;QAC1B,IAAI,CAACC,aAAa,GAAG,IAAI;IAC1B,CAAC;IAEOG,gBAAgB,GAAG,CAAC;QAC3B,IAAI,CAACN,eAAe,GAAG,IAAI;QAC3B,IAAI,CAACC,cAAc,GAAG,IAAI;IAC3B,CAAC;gBAtKkBd,OAAgB,CAAE,CAAC;QAhDhC,IAuNN,CAtNOoB,KAAK,OAAGC,qBAAkB,qBAAC,CAAC;YAClCtC,UAAU,GACTuC,IAAuC,EACvCpC,OAA2B,GACvB,CAAC;gBACL,IAAI,CAACgC,eAAe;gBACpB,IAAI,CAAClC,iBAAiB,GAAGE,OAAO,IAAI,IAAI;gBACxC,EAAE,MAAEqC,QAAK,QAACD,IAAI,GAAG,CAAC;oBACjB,IAAI,CAACN,aAAa,GAAGM,IAAI;gBAC1B,CAAC,MAAM,CAAC;oBACP,IAAI,CAACP,cAAc,GAAGO,IAAI;gBAC3B,CAAC;gBACD,IAAI,CAAChC,mBAAmB;YACzB,CAAC;YACDa,WAAW,GAAGmB,IAAS,EAAEpC,OAA4B,GAAK,CAAC;gBAC1D,IAAI,CAACiC,gBAAgB;gBACrB,IAAI,CAAChC,kBAAkB,GAAGD,OAAO,IAAI,IAAI;gBACzC,EAAE,MAAEqC,QAAK,QAACD,IAAI,GAAG,CAAC;oBACjB,IAAI,CAACR,cAAc,GAAGQ,IAAI;gBAC3B,CAAC,MAAM,CAAC;oBACP,IAAI,CAACT,eAAe,GAAGS,IAAI;gBAC5B,CAAC;gBACD,IAAI,CAAC/B,oBAAoB;YAC1B,CAAC;QACF,CAAC;QAzBK,IAuNN,CA7LQX,SAAS,GAAsB,IAAI;QAE3C,EAAqE,AAArE,mEAAqE;QA5B/D,IAuNN,CA1LQoC,aAAa,GAA0B,IAAI;QA7B7C,IAuNN,CAxLQ/B,yBAAyB,GAA6B,IAAI;QAGlE,EAAsE,AAAtE,oEAAsE;QAlChE,IAuNN,CApLQ6B,cAAc,GAA0B,IAAI;QAnC9C,IAuNN,CAlLQ1B,0BAA0B,GAA8B,IAAI;QArC9D,IAuNN,CA/KQS,sBAAsB,GAAsB,IAAI;QAxClD,IAuNN,CA9KQD,uBAAuB,GAAQ,IAAI;QAzCrC,IAuNN,CA7KQE,8BAA8B,GAAQ,IAAI;QA1C5C,IAuNN,CA5KQS,wBAAwB,GAAQ,IAAI;QA3CtC,IAuNN,CA3KQC,+BAA+B,GAAQ,IAAI;QAKlD,IAAI,CAACR,OAAO,GAAGA,OAAO;IACvB,CAAC;;QAlDWvB,eAAe,GAAfA,eAAe"}