{"version":3,"sources":["../../../src/utils/coords.ts"],"sourcesContent":["import type { State } from '../reducers/dragOffset.js'\nimport type { XYCoord } from '../interfaces.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n"],"names":["add","subtract","getSourceClientOffset","getDifferenceFromInitialOffset","a","b","x","y","state","clientOffset","initialClientOffset","initialSourceClientOffset"],"mappings":";;;;QAQgBA,GAAG,GAAHA,GAAG;QAYHC,QAAQ,GAARA,QAAQ;QAeRC,qBAAqB,GAArBA,qBAAqB;QAgBrBC,8BAA8B,GAA9BA,8BAA8B;SA3C9BH,GAAG,CAACI,CAAU,EAAEC,CAAU,EAAW,CAAC;IACrD,MAAM,CAAC,CAAC;QACPC,CAAC,EAAEF,CAAC,CAACE,CAAC,GAAGD,CAAC,CAACC,CAAC;QACZC,CAAC,EAAEH,CAAC,CAACG,CAAC,GAAGF,CAAC,CAACE,CAAC;IACb,CAAC;AACF,CAAC;SAOeN,QAAQ,CAACG,CAAU,EAAEC,CAAU,EAAW,CAAC;IAC1D,MAAM,CAAC,CAAC;QACPC,CAAC,EAAEF,CAAC,CAACE,CAAC,GAAGD,CAAC,CAACC,CAAC;QACZC,CAAC,EAAEH,CAAC,CAACG,CAAC,GAAGF,CAAC,CAACE,CAAC;IACb,CAAC;AACF,CAAC;SAUeL,qBAAqB,CAACM,KAAY,EAAkB,CAAC;IACpE,KAAK,CAAC,CAAC,CAACC,YAAY,GAAEC,mBAAmB,GAAEC,yBAAyB,EAAC,CAAC,GAAGH,KAAK;IAC9E,EAAE,GAAGC,YAAY,KAAKC,mBAAmB,KAAKC,yBAAyB,EAAE,CAAC;QACzE,MAAM,CAAC,IAAI;IACZ,CAAC;IACD,MAAM,CAACV,QAAQ,CACdD,GAAG,CAACS,YAAY,EAAEE,yBAAyB,GAC3CD,mBAAmB;AAErB,CAAC;SAOeP,8BAA8B,CAACK,KAAY,EAAkB,CAAC;IAC7E,KAAK,CAAC,CAAC,CAACC,YAAY,GAAEC,mBAAmB,EAAC,CAAC,GAAGF,KAAK;IACnD,EAAE,GAAGC,YAAY,KAAKC,mBAAmB,EAAE,CAAC;QAC3C,MAAM,CAAC,IAAI;IACZ,CAAC;IACD,MAAM,CAACT,QAAQ,CAACQ,YAAY,EAAEC,mBAAmB;AAClD,CAAC"}