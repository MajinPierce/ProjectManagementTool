{"version":3,"sources":["../../../src/utils/dirtiness.ts"],"sourcesContent":["import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n"],"names":["areDirty","NONE","ALL","__IS_NONE__","__IS_ALL__","dirtyIds","handlerIds","commonIds","intersection","length"],"mappings":";;;;QAcgBA,QAAQ,GAARA,QAAQ;;AAdK,GAAe,CAAf,UAAe;AAErC,KAAK,CAACC,IAAI,GAAa,CAAC,CAAC;QAAnBA,IAAI,GAAJA,IAAI;AACV,KAAK,CAACC,GAAG,GAAa,CAAC,CAAC;QAAlBA,GAAG,GAAHA,GAAG;AAEdD,IAAI,CAASE,WAAW,GAAG,IAAI;AAC/BD,GAAG,CAASE,UAAU,GAAG,IAAI;SAQfJ,QAAQ,CACvBK,QAAkB,EAClBC,UAAgC,EACtB,CAAC;IACX,EAAE,EAAED,QAAQ,KAAKJ,IAAI,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK;IACb,CAAC;IAED,EAAE,EAAEI,QAAQ,KAAKH,GAAG,IAAI,MAAM,CAACI,UAAU,KAAK,CAAW,YAAE,CAAC;QAC3D,MAAM,CAAC,IAAI;IACZ,CAAC;IAED,KAAK,CAACC,SAAS,OAAGC,UAAY,eAACF,UAAU,EAAED,QAAQ;IACnD,MAAM,CAACE,SAAS,CAACE,MAAM,GAAG,CAAC;AAC5B,CAAC"}