{"version":3,"sources":["../../../../src/actions/dragDrop/endDrag.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tSentinelAction,\n\tDragDropMonitor,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n"],"names":["createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","verifyIsDragging","sourceId","getSourceId","source","getSource","unpinSource","type","END_DRAG","invariant","isDragging"],"mappings":";;;;QAQgBA,aAAa,GAAbA,aAAa;AARH,GAAsB,CAAtB,UAAsB;AAMvB,GAAY,CAAZ,QAAY;SAErBA,aAAa,CAACC,OAAwB,EAAE,CAAC;IACxD,MAAM,CAAC,QAAQ,CAACC,OAAO,GAAmB,CAAC;QAC1C,KAAK,CAACC,OAAO,GAAGF,OAAO,CAACG,UAAU;QAClC,KAAK,CAACC,QAAQ,GAAGJ,OAAO,CAACK,WAAW;QACpCC,gBAAgB,CAACJ,OAAO;QAExB,KAAK,CAACK,QAAQ,GAAGL,OAAO,CAACM,WAAW;QACpC,EAAE,EAAED,QAAQ,IAAI,IAAI,EAAE,CAAC;YACtB,KAAK,CAACE,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAACH,QAAQ,EAAE,IAAI;YAChDE,MAAM,CAACR,OAAO,CAACC,OAAO,EAAEK,QAAQ;YAChCH,QAAQ,CAACO,WAAW;QACrB,CAAC;QACD,MAAM,CAAC,CAAC;YAACC,IAAI,EAAEC,QAAQ;QAAC,CAAC;IAC1B,CAAC;AACF,CAAC;SAEQP,gBAAgB,CAACJ,OAAwB,EAAE,CAAC;QACpDY,UAAS,YAACZ,OAAO,CAACa,UAAU,IAAI,CAAyC;AAC1E,CAAC"}