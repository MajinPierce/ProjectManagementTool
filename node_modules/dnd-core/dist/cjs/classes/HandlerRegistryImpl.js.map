{"version":3,"sources":["../../../src/classes/HandlerRegistryImpl.ts"],"sourcesContent":["import type { Store } from 'redux'\nimport { invariant } from '@react-dnd/invariant'\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tDragSource,\n\tDropTarget,\n\tSourceType,\n\tTargetType,\n\tIdentifier,\n\tHandlerRole,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport { asap } from '@react-dnd/asap'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n"],"names":["getNextHandlerId","role","id","getNextUniqueId","toString","HandlerRole","SOURCE","TARGET","Error","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","done","value","next","HandlerRegistryImpl","addSource","type","source","validateType","validateSourceContract","sourceId","addHandler","store","dispatch","addTarget","target","validateTargetContract","targetId","containsHandler","handler","dragSources","dropTargets","getSource","includePinned","invariant","isSourceId","isPinned","pinnedSourceId","pinnedSource","get","getTarget","isTargetId","getSourceType","types","getTargetType","removeSource","asap","delete","removeTarget","pinSource","unpinSource","set","Map"],"mappings":"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"}