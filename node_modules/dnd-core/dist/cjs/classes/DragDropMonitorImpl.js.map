{"version":3,"sources":["../../../src/classes/DragDropMonitorImpl.ts"],"sourcesContent":["import type { Store } from 'redux'\nimport { invariant } from '@react-dnd/invariant'\nimport { matchesType } from '../utils/matchesType.js'\nimport {\n\tgetSourceClientOffset,\n\tgetDifferenceFromInitialOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport type { State } from '../reducers/index.js'\nimport type {\n\tDragDropMonitor,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../interfaces.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n"],"names":["DragDropMonitorImpl","subscribeToStateChange","listener","options","handlerIds","invariant","Array","isArray","prevStateId","store","getState","stateId","handleChange","state","currentStateId","canSkipListener","areDirty","dirtyHandlerIds","subscribe","subscribeToOffsetChange","previousState","dragOffset","nextState","canDragSource","sourceId","source","registry","getSource","isDragging","canDrag","canDropOnTarget","targetId","target","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","matchesType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","length","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset","getSourceClientOffset","getDifferenceFromInitialOffset"],"mappings":"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"}