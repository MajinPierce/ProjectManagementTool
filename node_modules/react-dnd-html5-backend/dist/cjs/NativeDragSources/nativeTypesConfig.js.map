{"version":3,"sources":["../../../src/NativeDragSources/nativeTypesConfig.ts"],"sourcesContent":["import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n"],"names":["NativeTypes","nativeTypesConfig","FILE","exposeProperties","files","dataTransfer","Array","prototype","slice","call","items","matchesTypes","HTML","html","getDataFromDataTransfer","URL","urls","split","TEXT","text"],"mappings":";;;;;AAAYA,GAAW,CAAXA,WAAW;AACiB,GAA8B,CAA9B,0BAA8B;;;;;;;;;;;;;;;;;;;;;;AAc/D,KAAK,CAACC,iBAAiB,GAE1B,CAAC;KACHD,WAAW,CAACE,IAAI,GAAG,CAAC;QACpBC,gBAAgB,EAAE,CAAC;YAClBC,KAAK,GAAGC,YAA0B,GACjCC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,YAAY,CAACD,KAAK;;YAC9CM,KAAK,GAAGL,YAA0B,GACjCA,YAAY,CAACK,KAAK;;YACnBL,YAAY,GAAGA,YAA0B,GAAmBA,YAAY;QACzE,CAAC;QACDM,YAAY,EAAE,CAAC;YAAA,CAAO;QAAA,CAAC;IACxB,CAAC;KACAX,WAAW,CAACY,IAAI,GAAG,CAAC;QACpBT,gBAAgB,EAAE,CAAC;YAClBU,IAAI,GAAGR,YAA0B,EAAEM,YAAsB,OACxDG,0BAAuB,0BAACT,YAAY,EAAEM,YAAY,EAAE,CAAE;;YACvDN,YAAY,GAAGA,YAA0B,GAAmBA,YAAY;QACzE,CAAC;QACDM,YAAY,EAAE,CAAC;YAAA,CAAM;YAAE,CAAW;QAAA,CAAC;IACpC,CAAC;KACAX,WAAW,CAACe,GAAG,GAAG,CAAC;QACnBZ,gBAAgB,EAAE,CAAC;YAClBa,IAAI,GAAGX,YAA0B,EAAEM,YAAsB,OACxDG,0BAAuB,0BAACT,YAAY,EAAEM,YAAY,EAAE,CAAE,GAAEM,KAAK,CAAC,CAAI;;YACnEZ,YAAY,GAAGA,YAA0B,GAAmBA,YAAY;QACzE,CAAC;QACDM,YAAY,EAAE,CAAC;YAAA,CAAK;YAAE,CAAe;QAAA,CAAC;IACvC,CAAC;KACAX,WAAW,CAACkB,IAAI,GAAG,CAAC;QACpBf,gBAAgB,EAAE,CAAC;YAClBgB,IAAI,GAAGd,YAA0B,EAAEM,YAAsB,OACxDG,0BAAuB,0BAACT,YAAY,EAAEM,YAAY,EAAE,CAAE;;YACvDN,YAAY,GAAGA,YAA0B,GAAmBA,YAAY;QACzE,CAAC;QACDM,YAAY,EAAE,CAAC;YAAA,CAAM;YAAE,CAAY;QAAA,CAAC;IACrC,CAAC;AACF,CAAC;QArCYV,iBAAiB,GAAjBA,iBAAiB"}