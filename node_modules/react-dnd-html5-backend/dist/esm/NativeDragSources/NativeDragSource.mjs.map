{"version":3,"sources":["../../../src/NativeDragSources/NativeDragSource.ts"],"sourcesContent":["import type { NativeItemConfig } from './nativeTypesConfig.js'\nimport type { DragDropMonitor } from 'dnd-core'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n"],"names":["NativeDragSource","initializeExposedProperties","Object","keys","config","exposeProperties","forEach","property","defineProperty","item","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag"],"mappings":"AAGA,MAAM,OAAOA,gBAAgB;IAUpBC,2BAA2B,GAAG,CAAC;QACtCC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,gBAAgB,EAAEC,OAAO,EAAEC,QAAQ,GAAK,CAAC;YAChEL,MAAM,CAACM,cAAc,CAAC,IAAI,CAACC,IAAI,EAAEF,QAAQ,EAAE,CAAC;gBAC3CG,YAAY,EAAE,IAAI;gBAClBC,UAAU,EAAE,IAAI;gBAChBC,GAAG,IAAG,CAAC;oBACN,EAAsC,AAAtC,oCAAsC;oBACtCC,OAAO,CAACC,IAAI,EACV,+BAA+B,EAAEP,QAAQ,CAAC,uBAAuB;oBAEnE,MAAM,CAAC,IAAI;gBACZ,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAEMQ,gBAAgB,CAACC,YAA6C,EAAQ,CAAC;QAC7E,EAAE,EAAEA,YAAY,EAAE,CAAC;YAClB,KAAK,CAACC,aAAa,GAA0B,CAAC,CAAC;YAC/Cf,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,gBAAgB,EAAEC,OAAO,EAAEC,QAAQ,GAAK,CAAC;gBAChE,KAAK,CAACW,UAAU,GAAG,IAAI,CAACd,MAAM,CAACC,gBAAgB,CAACE,QAAQ;gBACxD,EAAE,EAAEW,UAAU,IAAI,IAAI,EAAE,CAAC;oBACxBD,aAAa,CAACV,QAAQ,IAAI,CAAC;wBAC1BY,KAAK,EAAED,UAAU,CAACF,YAAY,EAAE,IAAI,CAACZ,MAAM,CAACgB,YAAY;wBACxDV,YAAY,EAAE,IAAI;wBAClBC,UAAU,EAAE,IAAI;oBACjB,CAAC;gBACF,CAAC;YACF,CAAC;YACDT,MAAM,CAACmB,gBAAgB,CAAC,IAAI,CAACZ,IAAI,EAAEQ,aAAa;QACjD,CAAC;IACF,CAAC;IAEMK,OAAO,GAAY,CAAC;QAC1B,MAAM,CAAC,IAAI;IACZ,CAAC;IAEMC,SAAS,GAAQ,CAAC;QACxB,MAAM,CAAC,IAAI,CAACd,IAAI;IACjB,CAAC;IAEMe,UAAU,CAACC,OAAwB,EAAEC,MAAc,EAAW,CAAC;QACrE,MAAM,CAACA,MAAM,KAAKD,OAAO,CAACE,WAAW;IACtC,CAAC;IAEMC,OAAO,GAAS,CAAC;IACvB,EAAQ,AAAR,MAAQ;IACT,CAAC;gBArDkBxB,MAAwB,CAAE,CAAC;QAC7C,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACK,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAACR,2BAA2B;IACjC,CAAC"}